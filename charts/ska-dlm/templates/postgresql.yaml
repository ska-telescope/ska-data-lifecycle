apiVersion: v1
kind: Service
metadata:
  name: {{ include "ska-dlm.name" . }}-postgres
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ska-dlm.labels" . | indent 4 }}
    component: {{ .Values.postgres.component }}
    subsystem: {{ .Values.postgres.subsystem }}
    function: {{ .Values.postgres.function }}
    domain: {{ .Values.postgres.domain }}
    intent: production
spec:
  type: NodePort
  # publishNotReadyAddresses: true
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: 5432
    nodePort: 30432
    protocol: TCP
  selector:
    component: {{ .Values.postgres.component }}
    subsystem: {{ .Values.postgres.subsystem }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ska-dlm.name" . }}-postgres-client
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ska-dlm.labels" . | indent 4 }}
    component: {{ .Values.postgres.component }}
    subsystem: {{ .Values.postgres.subsystem }}
    function: {{ .Values.postgres.function }}
    domain: {{ .Values.postgres.domain }}
    intent: production
spec:
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: 5432
  selector:
    component: {{ .Values.postgres.component }}
    subsystem: {{ .Values.postgres.subsystem }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ska-dlm.name" . }}-postgres
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ska-dlm.labels" . | indent 4 }}
    component: {{ .Values.postgres.component }}
    subsystem: {{ .Values.postgres.subsystem }}
    function: {{ .Values.postgres.function }}
    domain: {{ .Values.postgres.domain }}
    intent: production
spec:
  replicas: {{ .Values.postgres.replicas }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      component: {{ .Values.postgres.component }}
      subsystem: {{ .Values.postgres.subsystem }}
  serviceName: {{ include "ska-dlm.name" . }}-postgres
  template:
    metadata:
      labels:
        {{- include "ska-dlm.labels" . | indent 8 }}
        component: {{ .Values.postgres.component }}
        subsystem: {{ .Values.postgres.subsystem }}
        function: {{ .Values.postgres.function }}
        domain: {{ .Values.postgres.domain }}
        intent: production
    spec:
#      initContainers:
#      - name: wait-for-dns
#        image: {{ .Values.postgres.image }}:{{ .Values.postgres.version }}
#        imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
#        command: ["sleep", "10"]
      containers:
      - name: postgres
        image: {{ .Values.postgres.image }}:{{ .Values.postgres.version }}
        imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
#        securityContext:
#          readOnlyRootFilesystem: false
#          runAsNonRoot: true
#          runAsUser: 1001
#          seLinuxOptions: { }
#          seccompProfile:
#            type: RuntimeDefault
        env:
          - name: POSTGRES_PASSWORD
            value: mysecretpassword