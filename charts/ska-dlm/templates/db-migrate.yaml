{{- if not .Values.postgresql.enabled }}

{{- if and .Values.database.migration.enabled .Values.database.migration.base.baseInstall }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ska-dlm.fullname" . }}-base-migration
spec:
  template:
    spec:
      containers:
      - name: base-migration
        image: {{ .Values.database.migration.image }}:{{ .Values.database.migration.version }}
        command: ["/bin/sh", "-c"]
        args:
          - >
            for f in /etc/sql/base/*.sql; do
              echo "Running $f";
              psql -f "$f";
            done
        env:
        {{- range $envvar_name := tuple "PGUSER" "PGPASSWORD" "PGHOST" "PGDATABASE" }}
        - name: {{ $envvar_name }}
          valueFrom:
            secretKeyRef:
              name: {{ include "ska-dlm.postgrest.db-auth-secret-name" $ }}
              key: {{ $envvar_name }}
        {{- end }}
        - name: PGPORT
          valueFrom:
            secretKeyRef:
              name: {{ include "ska-dlm.postgrest.db-auth-secret-name" $ }}
              key: PGPORT
              optional: true
        volumeMounts:
        - name: base-volume
          mountPath: /etc/sql/base/
      volumes:
      - name: base-volume
        configMap:
          name: ska-dlm-base-sql-scripts
      restartPolicy: Never
  backoffLimit: 4
{{- end }}

---

{{- if and .Values.database.migration.enabled .Values.database.migration.patch.patchInstall }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ska-dlm.fullname" . }}-patch-migration
spec:
  template:
    spec:
      containers:
      - name: patch-migration
        image: {{ .Values.database.migration.image }}:{{ .Values.database.migration.version }}
        command: ["/bin/sh", "-c"]
        args:
          - >
            for f in /etc/sql/patch/*.sql; do
              echo "Running $f";
              psql -f "$f";
            done
        env:
        {{ range $envvar_name := tuple "PGUSER" "PGPASSWORD" "PGHOST" "PGDATABASE" -}}
        - name: {{ $envvar_name }}
          valueFrom:
            secretKeyRef:
              name: {{ include "ska-dlm.postgrest.db-auth-secret-name" $ }}
              key: {{ $envvar_name }}
        {{ end -}}
        - name: PGPORT
          valueFrom:
            secretKeyRef:
              name: {{ include "ska-dlm.postgrest.db-auth-secret-name" $ }}
              key: PGPORT
              optional: true
        volumeMounts:
        - name: patch-volume
          mountPath: /etc/sql/patch/
      volumes:
      - name: patch-volume
        configMap:
          name: ska-dlm-patch-sql-scripts
      restartPolicy: Never
  backoffLimit: 4
{{- end }}

{{- end }}
