[tool.poetry]
name = "ska_data_lifecycle"
version = "0.0.1"
description = "Services for managing the lifecycle of SKA data products"
authors = ["Nadia Steyn <nadia.steyn@uwa.edu.au>"]
repository = "https://gitlab.com/ska-telescope/sdp/ska-data-lifecycle"
documentation = "https://developer.skao.int/projects/ska-data-lifecycle/en/latest/"
license = "BSD-3-Clause"
readme = "README.md"
packages = [{include="ska_data_lifecycle", from="src"}]

[tool.poetry.scripts]
meta-gen = "ska_data_lifecycle.ska_data_lifecycle:main"

[[tool.poetry.source]]
name = 'skao'
url = 'https://artefact.skao.int/repository/pypi-internal/simple'

[tool.poetry.dependencies]
python = "^3.10"
ska-ser-logging = "^0.4.1+0a677a67"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
pylint = "^2.17.4"
pylint-junit = "^0.3.2"
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
flake8-docstrings = "^1.7.0"
flake8-rst-docstrings = "^0.3.0"
flake8-pyproject = "^1.2.3"

[tool.poetry.group.docs.dependencies]
Sphinx = "^7.2.0"
ska-ser-sphinx-theme = "^0.1.1"
sphinx-autodoc-typehints = "^1.23.0"
m2r2 = "<0.3.3"

[tool.pytest.ini_options]
addopts = "-v"

[tool.flake8]
docstring-style = "sphinx"
rst-directives = "literalinclude"
rst-roles = [
    "py:attr",
    "py:class",
    "py:const",
    "py:exc",
    "py:func",
    "py:meth",
    "py:mod",
]
enable = "DAR104"
max-complexity = 10

# E203 and W503 conflict with black
ignore = ["E203", "W503"]

[tool.pylint.messages_control]
disable = ["duplicate-code", "fixme"]
enable = ["useless-suppression"]

[tool.pylint.similarities]
min-similarity-lines = 7
ignore-imports = "yes"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 99
