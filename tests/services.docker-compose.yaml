services:
  dlm_gateway:
    platform: linux/amd64
    image: dlm_gateway
    container_name: dlm_gateway
    build:
       context: ..
       dockerfile: tests/Dockerfile-gateway
       args:
         - PORT=8000
    ports:
      - 8000:8000
    environment:
        KEYCLOAK_URL: "https://keycloak:8443/"
        REDIRECT_URL: "http://dlm_gateway:8000/auth_callback"
        REALM: "test"
        CLIENT_ID: "dlm"
        CLIENT_SECRET: "xU2a9SOTLJZSwvAzAlfoucqg4sCMgY6O"
        STATE: "magic_string"
        AUTH: "1"
        INGEST_CLIENT: "http://dlm_ingest:8001"
        REQUESTS_CLIENT: "http://dlm_request:8002"
        STORAGE_CLIENT: "http://dlm_storage:8003"
        MIGRATION_CLIENT: "http://dlm_migration:8004"
    healthcheck:
        test: curl --fail http://localhost:8000/heartbeat || exit 1
        interval: 5s
        timeout: 5s
        retries: 5
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - dlm_network

  dlm_rclone:
    image: rclone/rclone
    container_name: dlm_rclone
    build:
       context: ..
       dockerfile: tests/Dockerfile-rclone
    ports:
      - 5572:5572
    command:
      - rcd
      - --rc-serve
      - --rc-addr
      - :5572
      - --rc-no-auth
      - --rc-web-gui
      - --rc-job-expire-duration=43200s
      - --rc-key=/etc/ssl/private/selfsigned.key
      - --rc-cert=/etc/ssl/certs/selfsigned.cert
    volumes:
      - shared-tmpfs:/data
    networks:
      - dlm_network

  dlm_postgrest:
    image: postgrest/postgrest:v12.2.3
    container_name: dlm_postgrest
    ports:
      - 3000:3000
    environment:
      PGRST_DB_URI: postgres://ska_dlm_admin:password@dlm_db:5432/ska_dlm
      PGRST_OPENAPI_SERVER_PROXY_URI: http://0.0.0.0:3000
      PGRST_DB_ANON_ROLE: ska_dlm_admin
      PGRST_DB_SCHEMAS: public
    depends_on:
      dlm_db:
        condition: service_healthy
    networks:
      - dlm_network

  dlm_db:
    shm_size: '32gb'
    build:
       context: ..
       dockerfile: tests/Dockerfile-db
       shm_size: '32gb'
    image: dlm_db
    container_name: dlm_db
    ports:
      - 5432:5432
    environment:
      - LC_ALL=C.UTF-8  # That's the only one installed in the image
      - POSTGRES_DB=ska_dlm
      - POSTGRES_USER=ska_dlm_admin
      - POSTGRES_PASSWORD=password
    networks:
      - dlm_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ska_dlm_admin", "-d", "ska_dlm"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    build:
        context: ..
        dockerfile: tests/Dockerfile-keycloak
    image: keycloak
    command: start-dev --import-realm
    container_name: keycloak
    ports:
      - 8443:8443
    environment:
        KC_DB: "postgres"
        KC_DB_URL: "jdbc:postgresql://keycloak_db:5432/keycloak"
        KC_DB_USERNAME: "admin"
        KC_DB_PASSWORD: "maximum-finishing-punk"
        KC_HOSTNAME: "localhost"
        KEYCLOAK_ADMIN: "admin"
        KEYCLOAK_ADMIN_PASSWORD: "affirm-monoxide-earthling"
    healthcheck:
        test:
          [
            "CMD-SHELL",
            'exec 3<>/dev/tcp/localhost/9000; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:9000\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $ERROR'
          ]
        interval: 5s
        timeout: 5s
        retries: 10
    depends_on:
      keycloak_db:
        condition: service_healthy
    networks:
      - dlm_network

  keycloak_db:
    image: library/postgres
    container_name: keycloak_db
    ports:
      - 5400:5432
    environment:
        POSTGRES_DB: "keycloak"
        POSTGRES_USER: "admin"
        POSTGRES_PASSWORD: "maximum-finishing-punk"
    networks:
      - dlm_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "keycloak"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  dlm_network:
    name: dlm_network

volumes:
  shared-tmpfs:
    name: shared-tmpfs
