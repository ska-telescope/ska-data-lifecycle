image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  CI_POETRY_VERSION: 1.8.2

# Enable caching for python
cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .cache/pip

stages:
  - build
  - pre-test
  - test
  - post-test
  - lint
  - pages
  - scan
  - deploy
  - deploy-dp
  - integration
  - integration-dp
  - staging
  - staging-dp
  - publish

# Include CI templates
include:
    # Python
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'

    # Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

    # Tag Based GitLab Release Management
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml'

    # Build and push the docker image
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

    # Build and push the Helm chart
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'

    # Test Helm chart
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/k8s-test.gitlab-ci.yml'

    # .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

    # deploy steps
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/deploy.gitlab-ci.yml'


oci-image-build-keycloak:
  extends:
    - .image_builder_template
  stage: build
  variables:
    OCI_IMAGE: ska-data-lifecycle-test-keycloak
    OCI_IMAGE_FILE_PATH: tests/Dockerfile-keycloak
  script:
    make oci-build-keycloak CAR_OCI_REGISTRY_HOST=${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}

oci-image-build-gateway:
  extends:
    - .image_builder_template
  stage: build
  variables:
    OCI_IMAGE: ska-data-lifecycle-test-gateway
    OCI_IMAGE_FILE_PATH: tests/Dockerfile-gateway
  script:
    make oci-build-gateway CAR_OCI_REGISTRY_HOST=${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}

python-test:
  image: docker:27.0.2
  services:
    - docker:27.0.2-dind
  before_script:
    - docker compose --file tests/testrunner.docker-compose.yaml build
  script:
    - docker compose --file tests/testrunner.docker-compose.yaml -p dlm-test-services run dlm_testrunner .
  after_script:
    - docker compose --file tests/testrunner.docker-compose.yaml -p dlm-test-services down

k8s-test:
  variables:
    KUBE_NAMESPACE: ci-$CI_PROJECT_NAME-$CI_PIPELINE_ID
    HELM_VALUES: resources/ci-dev-values.yaml
    # K8S_HOST_URL: ""  # k8s host unknown, not using public ingress
  before_script:
    - poetry self update $CI_POETRY_VERSION
    - poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE
    - poetry install --with=test
  script:
    - make k8s-install-chart
    - make k8s-test
  environment:
    action: access
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always

.info_script: &info_script
  - |-
    echo "Status of pods in $KUBE_NAMESPACE namespace:"
    kubectl get pods -n $KUBE_NAMESPACE -o jsonpath="{range .items[*]}{'Pod: '}{.metadata.name}:{'\n'}{'\t'}{'Image: '}{.spec.containers[*].image}{'\n'}{'\t'}{'Status: '}{.status.phase}{'\n'}{end}{'\n'}"
    echo "Addresses to connect to the deployment of the Dataproduct Dashboard: "
    echo "  https://sdhp.stfc.skao.int/$KUBE_NAMESPACE/dashboard/"
    echo "Backend API:"
    echo "  https://sdhp.stfc.skao.int/$KUBE_NAMESPACE/api/"

deploy-dev-environment:
  variables:
    K8S_CHART_PARAMS: --values resources/config-ci-dev-values.yaml --values resources/cluster-k8s-values.yaml --wait --timeout=5m

stop-dev-environment:
  needs: []

deploy-dev-environment-dp:
  stage: deploy-dp
  extends: deploy-dev-environment
  when: manual
  tags:
    - ska-k8srunner-dp
  variables:
    K8S_CHART_PARAMS: --values resources/config-ci-dev-values.yaml --values resources/cluster-sdhp-values.yaml --wait --timeout=5m

test-dev-environment-dp:
  stage: deploy-dp
  extends: test-dev-environment
  when: manual
  tags:
    - ska-k8srunner-dp
  needs:
    - deploy-dev-environment-dp

info-dev-environment-dp:
  stage: deploy-dp
  extends: info-dev-environment
  tags:
    - ska-k8srunner-dp
  script:
    - *info_script

stop-dev-environment-dp:
  stage: deploy-dp
  extends: stop-dev-environment
  tags:
    - ska-k8srunner-dp
  needs: []

deploy-integration:
  variables:
    K8S_CHART_PARAMS: --values resources/config-integration-values.yaml --values resources/cluster-k8s-values.yaml --wait --timeout=5m

stop-integration:
  needs: []

deploy-integration-dp:
  stage: integration-dp
  extends: deploy-integration
  when: manual
  tags:
    - ska-k8srunner-dp
  variables:
    K8S_CHART_PARAMS: --values resources/config-integration-values.yaml --values resources/cluster-sdhp-values.yaml --wait --timeout=5m

info-integration-dp:
  stage: integration-dp
  extends: info-integration
  tags:
    - ska-k8srunner-dp
  script:
    - *info_script

redeploy-integration:
  variables:
    K8S_CHART_PARAMS: --values resources/config-integration-values.yaml --values resources/cluster-k8s-values.yaml --wait --timeout=5m

redeploy-integration-dp:
  stage: integration-dp
  extends: redeploy-integration
  tags:
    - ska-k8srunner-dp
  variables:
    K8S_CHART_PARAMS: --values resources/config-integration-values.yaml --values resources/cluster-sdhp-values.yaml --wait --timeout=5m

stop-integration-dp:
  stage: integration-dp
  extends: stop-integration
  tags:
    - ska-k8srunner-dp
  needs: []

deploy-staging:
  variables:
    K8S_CHART_PARAMS: --values resources/config-staging-values.yaml --values resources/cluster-k8s-values.yaml --wait --timeout=5m

stop-staging:
  needs: []

deploy-staging-dp:
  stage: staging-dp
  extends: deploy-staging
  when: manual
  tags:
    - ska-k8srunner-dp
  variables:
    K8S_CHART_PARAMS: --values resources/config-staging-values.yaml --values resources/cluster-sdhp-values.yaml --wait --timeout=5m

info-staging-dp:
  stage: staging-dp
  extends: info-staging
  tags:
    - ska-k8srunner-dp
  script:
    - *info_script

redeploy-staging:
  variables:
    K8S_CHART_PARAMS: --values resources/config-staging-values.yaml --values resources/cluster-k8s-values.yaml --wait --timeout=5m

redeploy-staging-dp:
  stage: staging-dp
  extends: redeploy-staging
  tags:
    - ska-k8srunner-dp
  variables:
    K8S_CHART_PARAMS: --values resources/config-staging-values.yaml --values resources/cluster-sdhp-values.yaml --wait --timeout=5m

stop-staging-dp:
  stage: staging-dp
  extends: stop-staging
  tags:
    - ska-k8srunner-dp
  needs: []